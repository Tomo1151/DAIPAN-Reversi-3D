import*as e from"three";import*as t from"./Event.js";import{Disk as r}from"./Object.js";export default class a{#patience=80;#gameManager;#logger;#order;#name;#point=0;#anger=0;#bang=0;constructor(e,r){this.#gameManager=e;this.#logger=this.#gameManager.logger;this.#order=r;this.#gameManager.addEventListener("turn_notice",e=>{if(e.order!=this.order)return;this.#logger.log((this.name??"Player")+" received: turn_notice");let r=this.#gameManager.board.count(this.#gameManager.enemy.order)-this.#gameManager.board.count(this.order);if(r>5)this.retching(Math.floor(r/5)*1.5);if(!e.canPut)this.retching(7.5)});this.#gameManager.addEventListener("put_success",e=>{if(e.order==this.order){this.#logger.log((this.name??"Player")+" received: put_success");this.#logger.log(`${this.name??"Player"} send: confirmed`);this.#gameManager.dispatchEvent(new t.ConfirmationEvent)}else{if(e.count>4){this.retching(5)}}});this.#gameManager.addEventListener("take_corner",e=>{if(e.order==this.order)return;this.#logger.log((this.name??"Player")+" received: take_corner");this.retching(20)});this.#gameManager.addEventListener("bang_success",e=>{if(e.order!=this.order)return;this.#logger.log((this.name??"Player")+" received: bang_success");this.#logger.log(`${this.name??"Player"} send: confirmed`);if(e.order!=this.order)return;this.calmdown();this.#gameManager.dispatchEvent(new t.ConfirmationEvent)});this.#gameManager.addEventListener("put_fail",e=>{if(e.order!=this.order)return;this.#logger.log((this.name??"Player")+" received: put_fail")});this.#gameManager.addEventListener("game_over",e=>{this.#logger.log(`${this.name??"Player"} received: game_over`)})}retching(e){this.#anger+=e;this.#anger=Math.min(this.#anger,100);this.#gameManager.angerUpdate()}calmdown(e){if(e){this.#anger-=e;this.#anger=Math.max(this.#anger,0)}else{this.#anger=0}this.#gameManager.angerUpdate()}get gameManager(){return this.#gameManager}get order(){return this.#order}get name(){return this.#name}set name(e){this.#name=e}get point(){return this.#point}set point(e){this.#point=e}get anger(){return this.#anger}set anger(e){this.#anger=e}get bang(){return this.#bang}set bang(e){this.#bang=e}get logger(){return this.#logger}get patience(){return this.#patience}set patience(e){this.#patience=e}}
