import*as c from"three";import e from"../../GameManager.js";import{sleep as n}from"../../Utils.js";import{Disk as r,Board as t}from"../../Object.js";import s from"../Section.js";import*as h from"../../Event.js";export default class l extends s{static MODE_NONE=-1;static MODE_PUT=0;static MODE_BANG=1;#currentTable=new Array(8*8);#isSelectable=false;#selectedHitbox;#hitboxes=[];#base;#onBase;#selectArea;#diskModels=[];#diskAnimations=[];#animationMixers=[];#intersects=[];#selectedColor=new c.Color(16711680);#mode=l.MODE_PUT;#playerAct;#posDiff;#clock;constructor(e,t,s,i){super(e,t,s,i);this.rendererManager.controls.enabled=true;this.#clock=new c.Clock;const a=new AbortController;const n=new AbortController;for(let e=0;e<8*8;e++)this.#currentTable[e]=r.EMPTY;this.logger.log("-- GAME SECTION --");const o=e=>{if(e.type=="touchmove")e=e.touches[0];if(this.gameManager.player.order!=this.gameManager.currentTurn||!this.#isSelectable)return;this.rendererManager.setCursorPoint(e);this.rendererManager.raycaster.setFromCamera(this.rendererManager.mouse,this.rendererManager.camera);switch(this.#mode){case l.MODE_PUT:let t=this.rendererManager.raycaster.intersectObjects(this.#hitboxes);if(t.length>0){for(let e of this.#hitboxes){if(e==t[0].object){e.visible=true;this.#selectedHitbox=e}else{e.visible=false}}}else{this.#selectedHitbox=undefined}break;case l.MODE_BANG:for(let e of this.#hitboxes)e.visible=false;let e=this.rendererManager.raycaster.intersectObject(this.#base)[0];if(e){this.#onBase=true;this.#selectArea.visible=true;this.#selectArea.position.x=e.point.x;this.#selectArea.position.z=e.point.z}else{this.#onBase=false;this.#selectArea.visible=false}break}};window.addEventListener("mousemove",o,{signal:n.signal});window.addEventListener("touchmove",o,{signal:n.signal});this.canvas.addEventListener("mousedown",()=>{switch(this.#mode){case l.MODE_PUT:let t=this.#selectedHitbox;this.canvas.addEventListener("mouseup",e=>{if(this.#selectedHitbox==t&&t!=undefined){let e=this.#selectedHitbox.cellX;let t=this.#selectedHitbox.cellY;this.#selectedHitbox=undefined;this.gameManager.dispatchEvent(new h.PutNoticeEvent({order:r.WHITE,x:e,y:t}))}},{signal:a.signal});break;case l.MODE_BANG:let e=this.#selectArea.position;if(this.#onBase){this.#selectArea.visible=false;this.gameManager.dispatchEvent(new h.BangNoticeEvent({order:r.WHITE,x:e.x*10+400,y:e.z*10+400}))}break}},{signal:a.signal});this.gameManager.addEventListener("turn_notice",e=>{if(this.gameManager.player.order==e.order)this.#isSelectable=true});this.gameManager.addEventListener("put_pass",e=>{if(this.gameManager.player.order!=e.order)return;for(let e of this.#hitboxes)e.visible=false;this.#isSelectable=false;this.#playerAct="pass"});this.gameManager.addEventListener("put_success",e=>{if(this.gameManager.player.order==e.order){for(let e of this.#hitboxes)e.visible=false;this.#isSelectable=false}this.#playerAct="put"});this.gameManager.addEventListener("bang_success",e=>{this.#isSelectable=false;this.#playerAct="bang";this.#posDiff=e.pos});this.gameManager.addEventListener("confirmed",async()=>{if(this.#playerAct=="bang"){this.cameraManager.restore(async()=>{this.cameraManager.shake();await this.diskMeshFlip(this.gameManager.board.table,this.#posDiff);this.gameManager.dispatchEvent(new h.UpdateCompleteEvent)})}else{await this.diskMeshUpdate(this.gameManager.board.table);this.gameManager.dispatchEvent(new h.UpdateCompleteEvent)}});this.gameManager.addEventListener("game_over",()=>{this.logger.log("delete click callback");a.abort();this.logger.log("delete mousemove callback");n.abort()})}run(){let t=this.#clock.getDelta();for(let e of this.#animationMixers){if(e){e.update(t)}}}async init(){const e=new c.AmbientLight(16777215,1.75);const t=new c.DirectionalLight(16777215,1);const s=new c.DirectionalLight(16777215,1);const i=new c.DirectionalLight(16777215,1);const a=new c.DirectionalLight(16777215,1);const n=[t,s,i,a];t.position.set(25,25,-25);s.position.set(-25,25,-25);i.position.set(-25,25,25);a.position.set(-25,25,-25);for(let e of n){e.intensity=.75;this.scene.add(e)}const o=this.gameManager.board.shockThreshold/16;const r=new c.Mesh(new c.CylinderGeometry(o,o,1,30),new c.MeshPhongMaterial({color:16711680,opacity:.5,transparent:true}));r.visible=false;r.position.set(0,1.9,0);this.#selectArea=r;const l=new c.Mesh(new c.PlaneGeometry(80,80,1,1),new c.MeshPhongMaterial({color:8323327,opacity:0,transparent:true}));l.position.y=.6;l.rotation.x=-Math.PI/2;this.#base=l;this.scene.add(r);this.scene.add(l);this.object_set().then(async()=>{await this.diskMeshUpdate(this.gameManager.board.table);this.gameManager.dispatchEvent(new h.UpdateCompleteEvent)})}async animationFlip(e,t){let s=this.#diskModels[e];let i=this.#animationMixers[e].clipAction(s.animations[t]);let a=s.animations[t].duration;i.timeScale=1;i.setLoop(c.LoopOnce);i.clampWhenFinished=true;this.logger.log(` |... animation start [flip :to${t==r.BLACK?"B":"W"}]`);i.reset().play();await n(a*1e3);this.logger.log(" |... animation end");i.stop();this.gameManager.audio.flip.cloneNode().play();s.scene.rotation.z+=Math.PI;s.scene.rotation.z%=2*Math.PI}async animationPut(e,t){let s=this.#diskModels[e];let i=this.#animationMixers[e].clipAction(s.animations[1-t+2]);let a=s.animations[1-t+2].duration;s.scene.visible=true;s.scene.rotation.z=t*Math.PI;i.timeScale=5;i.setLoop(c.LoopOnce);i.clampWhenFinished=true;this.logger.log(` |... animation start [put :${t==r.BLACK?"B":"W"}]`);i.reset().play();await n(a*200);this.logger.log(" |... animation end");this.gameManager.audio.put.cloneNode().play();i.stop()}async object_set(){const o=new c.MeshStandardMaterial({color:16711680,opacity:.75,transparent:true});return new Promise(async e=>{for(let t=0;t<8;t++){for(let e=0;e<8;e++){const s=new c.BoxGeometry(10,1.15,10);const i=new c.Mesh(s,o);i.position.set(10*e-(10*3+5),.1,10*t-(10*3+5));i.cellX=e;i.cellY=t;i.visible=false;this.#hitboxes.push(i);this.scene.add(i)}}let a,t;let n=this.gameManager.objects.disk;for(let i=0;i<8;i++){for(let s=0;s<8;s++){let e=Object.assign({},n);let t=e.animations;e.scene=n.scene.clone();a=new c.AnimationMixer(e.scene);e.scene.scale.set(4,4,4);e.scene.position.set(10*s-(10*3+5),1.325,10*i-(10*3+5));e.scene.visible=false;this.#diskModels.push(e);this.#diskAnimations.push(e.animations);this.#animationMixers.push(a);this.scene.add(e.scene)}}e()})}async diskMeshFlip(i,e){let t=this.#diskModels[0].animations[2].duration;this.gameManager.audio.bang.play();await n(100);for(let s of e){let e=s.y*8+s.x;if(i[e].state==r.EMPTY)continue;let t=i[e].state==r.WHITE?r.WHITE:r.BLACK;this.#currentTable[e]=i[e].state;this.animationFlip(e,t)}await n(t*400)}async diskMeshUpdate(t,e,s){for(let e=0;e<8*8;e++){if(this.#currentTable[e]!=t[e].state){if(this.#currentTable[e]==r.EMPTY){this.#currentTable[e]=t[e].state;switch(t[e].state){case r.WHITE:await this.animationPut(e,r.WHITE);break;case r.BLACK:await this.animationPut(e,r.BLACK)}}}}for(let e=0;e<8*8;e++){if(this.#currentTable[e]!=t[e].state){if(this.#currentTable[e]==r.WHITE){await this.animationFlip(e,r.BLACK)}else{await this.animationFlip(e,r.WHITE)}}this.#currentTable[e]=t[e].state}}toggleMode(e,t=null){if(e==this.mode){this.mode=l.MODE_NONE;this.cameraManager.controlable=true}else{this.mode=e}this.logger.log(`MODE UPDATE: ${this.mode}`)}get mode(){return this.#mode}set mode(e){this.#mode=e}}
