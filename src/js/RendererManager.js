import*as t from"three";import{OrbitControls as r}from"three/addons/controls/OrbitControls.js";export default class e{static SCREEN_WIDTH;static SCREEN_HEIGHT;#gameManager;#renderer;#camera;#controls;#mouse;#raycaster;constructor(e){this.#gameManager=e;this.#renderer=new t.WebGLRenderer({canvas:document.getElementById("main-canvas"),antialias:false,alpha:true});this.#renderer.setPixelRatio(window.devicePixelRatio);this.#renderer.setSize(window.innerWidth,window.innerHeight);this.#camera=new t.PerspectiveCamera(45,window.innerWidth/window.innerHeight,1,200);this.#camera.position.set(50,50,50);this.#controls=new r(this.#camera,this.#renderer.domElement);this.#controls.maxDistance=135;this.#controls.minDistance=30;this.#controls.maxZoom=2;this.#controls.minZoom=1.25;this.#controls.maxPolarAngle=Math.PI/2;this.#mouse=new t.Vector2({x:0,y:0});this.#raycaster=new t.Raycaster;window.addEventListener("resize",()=>{this.#renderer.setSize(window.innerWidth,window.innerHeight);this.#renderer.setPixelRatio(window.devicePixelRatio);this.#camera.aspect=window.innerWidth/window.innerHeight;this.#camera.updateProjectionMatrix()})}getIntersectObject(e){return this.#raycaster.intersectObjects(e)}setCursorPoint(e){this.#mouse.x=e.clientX/window.innerWidth*2-1;this.#mouse.y=e.clientY/window.innerHeight*-2+1;return this.#mouse}render(e){this.#renderer.render(e,this.#camera)}get renderer(){return this.#renderer}get raycaster(){return this.#raycaster}get mouse(){return this.#mouse}get camera(){return this.#camera}get controls(){return this.#controls}}
